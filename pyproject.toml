[project]
name = "russel-library-api"
version = "0.1.0"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aiosqlite>=0.21.0",
    "fastapi[standard]>=0.115.11",
    "greenlet>=3.2.3",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.10.0",
]

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.25.3",
    "ruff>=0.9.9",
]

[tool.pytest.ini_options]
pythonpath = [
  "."
]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]
ignore_missing_imports = true
allow_untyped_decorators = true
plugins = ["pydantic.mypy"]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
no_implicit_reexport = true
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
target-version = "py313"
exclude = ["venv", ".venv", "alembic"]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = []

[tool.ruff.format]
quote-style = "double"
line-ending = "auto"

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

